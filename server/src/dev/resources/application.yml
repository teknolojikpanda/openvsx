logging:
  pattern:
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'

server:
  port: 8080
  jetty:
    threads:
      max-queue-capacity: 100

spring:
  application:
    name: openvsx-server
  autoconfigure:
    # don't send traces to Zipkin in development
    exclude: org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinAutoConfiguration
  profiles:
    include: ovsx
  data:
    redis:
      # redis standalone configuration
      host: localhost
      port: 6379
      # connect to redis cluster configured in docker-compose.yml
#      cluster:
#        nodes: '127.0.0.1:7001,127.0.0.1:7002,127.0.0.1:7003,127.0.0.1:7004,127.0.0.1:7005,127.0.0.1:7006'
#      username: openvsx
#      password: openvsx
  datasource:
    url: jdbc:postgresql://localhost:5432/postgres
    username: gitpod
    password: gitpod
  flyway:
    baseline-on-migrate: true
    baseline-version: 0.1.0
    baseline-description: JobRunr tables
  jpa:
    open-in-view: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: none
  session:
    store-type: jdbc
    jdbc:
      initialize-schema: never

  security:
      oauth2:
        client:
          registration:
            eclipse:
              authorization-grant-type: authorization_code
              redirect-uri: http://localhost/login/oauth2/code/eclipse
              scope: openvsx_publisher_agreement, profile
          provider:
            eclipse:
              authorization-uri: https://accounts.eclipse.org/oauth2/authorize
              token-uri: https://accounts.eclipse.org/oauth2/token
              user-info-uri: https://accounts.eclipse.org/oauth2/UserInfo
              user-name-attribute: name
              user-info-authentication-method: header

management:
  health:
    probes:
      enabled: true
  endpoints:
    web:
      exposure:
        include:
          - health
          - metrics
          - prometheus
  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
          client:
            requests: true

springdoc:
  model-and-view-allowed: true
  swagger-ui:
    path: /swagger-ui
    docExpansion: list
    operationsSorter: alpha
    urlsPrimaryName: Registry API
    supportedSubmitMethods:
      - get

org:
  jobrunr:
    job-scheduler:
      enabled: true
    background-job-server:
      enabled: true
      worker-count: 2
    dashboard:
      enabled: false
    database:
      type: sql
    miscellaneous:
      allow-anonymous-data-usage: false

bucket4j:
  enabled: true
  cache-to-use: redis-jedis # use redis-cluster-jedis when running redis cluster
  filters:
    - cache-name: buckets
      url: '/api/-/(namespace/create|publish)'
      http-response-headers:
        Access-Control-Allow-Origin: '*'
        Access-Control-Expose-Headers: X-Rate-Limit-Retry-After-Seconds, X-Rate-Limit-Remaining
      rate-limits:
        - cache-key: getParameter("token")
          bandwidths:
            - capacity: 15
              time: 1
              unit: seconds
    - cache-name: buckets
      url: '/vscode/asset/.*/.*/.*/Microsoft.VisualStudio.Services.Icons.Default'
      http-response-headers:
        Access-Control-Allow-Origin: '*'
        Access-Control-Expose-Headers: X-Rate-Limit-Retry-After-Seconds, X-Rate-Limit-Remaining
      rate-limits:
        - cache-key: getRemoteAddr()
          bandwidths:
            - capacity: 75
              time: 1
              unit: seconds
    - cache-name: buckets
      url: '/vscode/(?!asset/.*/.*/.*/Microsoft.VisualStudio.Services.Icons.Default).*|/api/(?!(.*/.*/review(/delete)?)|(-/(namespace/create|publish))).*'
      http-response-headers:
        Access-Control-Allow-Origin: '*'
        Access-Control-Expose-Headers: X-Rate-Limit-Retry-After-Seconds, X-Rate-Limit-Remaining
      rate-limits:
        - cache-key: getRemoteAddr()
          bandwidths:
            - capacity: 15
              time: 1
              unit: seconds

ovsx:
  databasesearch:
    enabled: false
  elasticsearch:
    enabled: true
    clear-on-start: true
  redis:
    embedded: true
  eclipse:
    base-url: https://api.eclipse.org
    publisher-agreement:
      timezone: US/Eastern
  extension-control:
    update-on-start: true
  integrity:
    key-pair: create # create, renew, delete, 'undefined'
  registry:
    version: 'v0.14.3'
  storage:
    local:
      directory: /tmp
  ldap:
    url: ${LDAP_URL:}
    base: ${LDAP_BASE:}
    userDn: ${LDAP_USER_DN:}
    password: ${LDAP_PASSWORD:}
    userSearchBase: ${LDAP_USER_SEARCH_BASE:ou=users}
    userSearchFilter: ${LDAP_USER_SEARCH_FILTER:(uid={0})}
    groupSearchBase: ${LDAP_GROUP_SEARCH_BASE:ou=groups}
    groupSearchFilter: ${LDAP_GROUP_SEARCH_FILTER:(member=uid={0},{1},{2})}
    adminGroups: ${LDAP_ADMIN_GROUPS:admins,openvsx-admins}
